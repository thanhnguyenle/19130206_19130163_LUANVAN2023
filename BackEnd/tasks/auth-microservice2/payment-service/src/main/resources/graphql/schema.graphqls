type PaySlipInventory{
    id: String,
    materialReturnID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
    createdAt: Int,
}

input PaySlipInventoryInput {
    materialReturnID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
}

type PagePaySlipInventoryInfo{
    paySlipInventoryOutputs: [PaySlipInventory],
    currentPage: Int,
    totalPage: Int,
    totalItem: Int
}

type PaySlipOrder{
    id: String,
    orderReturnID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
    createdAt: Int,
}

input PaySlipOrderInput {
    orderReturnID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
}

type PagePaySlipOrderInfo{
    paySlipOrderOutputs: [PaySlipOrder],
    currentPage: Int,
    totalPage: Int,
    totalItem: Int
}

type ReceiptInventory{
    id: String,
    materialID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
    createdAt: Int,
}

input ReceiptInventoryInput {
    materialID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
}

type PageReceiptInventoryInfo{
    receiptInventoryOutputs: [ReceiptInventory],
    currentPage: Int,
    totalPage: Int,
    totalItem: Int
}

type ReceiptOrder{
    id: String,
    orderID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
    createdAt: Int,
}

input ReceiptOrderInput {
    orderID: String,
    total: Float,
    totalReceive: Float,
    totalReturn: Float,
    status: String,
    description: String,
    paymentType: String,
    accountSend: String,
    accountReceive:String,
}

type PageReceiptOrderInfo{
    receiptOrderOutputs: [ReceiptOrder],
    currentPage: Int,
    totalPage: Int,
    totalItem: Int
}

type ResultOutput{
    success: Boolean,
}

input Paging{
    page: Int,
    limit: Int
}

enum TimeSearch{
    TODAY
    YESTERDAY
    THIS_WEEK
    LAST_WEEK
    THIS_MONTH
    LAST_MONTH
    THIS_YEAR
    LAST_YEAR
    ALL_TIME
}

type Query {
   #PaySlipInventory
    paySlipInventories: PagePaySlipInventoryInfo
    paySlipInventory(id: String): PaySlipInventory
    filterPaySlipInventories(pagingInput: Paging, timeSearch: TimeSearch, searchType: String,searchValue:String, sortType:String, sortValue:String): PagePaySlipInventoryInfo
    #PaySlipOrder
    paySlipOrders: PagePaySlipOrderInfo
    paySlipOrder(id: String): PaySlipOrder
    filterPaySlipOrders(pagingInput: Paging, timeSearch: TimeSearch, searchType: String,searchValue:String, sortType:String, sortValue:String): PagePaySlipOrderInfo
    #ReceiptInventory
    receiptInventories: PageReceiptInventoryInfo
    receiptInventory(id: String): ReceiptInventory
    filterReceiptInventories(pagingInput: Paging, timeSearch: TimeSearch, searchType: String,searchValue:String, sortType:String, sortValue:String): PageReceiptInventoryInfo
    #ReceiptOrder
    receiptOrders: PageReceiptOrderInfo
    receiptOrder(id: String): ReceiptOrder
    filterReceiptOrders(pagingInput: Paging, timeSearch: TimeSearch, searchType: String,searchValue:String, sortType:String, sortValue:String): PageReceiptOrderInfo

}

type Mutation {
    #PaySlipInventory
    createPaySlipInventory(paySlipInventoryInput: PaySlipInventoryInput): PaySlipInventory
    updatePaySlipInventory(id: String, paySlipInventoryInput: PaySlipInventoryInput): PaySlipInventory
    deletePaySlipInventory(id: String): ReceiptOrder
    #PaySlipOrder
    createPaySlipOrder(paySlipOrderInput: PaySlipOrderInput): PaySlipOrder
    updatePaySlipOrder(id: String, paySlipOrderInput: PaySlipOrderInput): PaySlipOrder
    deletePaySlipOrder(id: String): ReceiptOrder
    #ReceiptInventory
    createReceiptInventory(receiptInventoryInput: ReceiptInventoryInput): ReceiptInventory
    updateReceiptInventory(id: String, receiptInventoryInput: ReceiptInventoryInput): ReceiptInventory
    deleteReceiptInventory(id: String): ReceiptOrder
    #ReceiptOrder
    createReceiptOrder(receiptOrderInput: ReceiptOrderInput): ReceiptOrder
    updateReceiptOrder(id: String, receiptOrderInput: ReceiptOrderInput): ReceiptOrder
    deleteReceiptOrder(id: String): ReceiptOrder


}
