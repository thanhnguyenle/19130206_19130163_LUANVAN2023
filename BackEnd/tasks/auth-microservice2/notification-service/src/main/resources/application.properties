# server setting
server.address=0.0.0.0
server.port=8087

eureka.client.serviceUrl.defaultZone=http://admin:admin@eureka-server:8761/eureka
spring.application.name=notification-service
# instance id for eureka server
eureka.instance.instance-id=${spring.application.name}:${random.value}
# zipkin
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0
management.tracing.enabled=true

# kafka
spring.kafka.bootstrap-servers=broker:29092
spring.kafka.template.default-topic=orderTopic
spring.kafka.consumer.group-id=notificationId
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=fitnlu.ntpos.notificationservice.event.OrderPlacedEventDeserialization
#spring.kafka.consumer.properties.spring.json.type.mapping=event:fitnlu.ntpos.notificationservice.event.OrderPlacedEvent

# graphql
spring.graphql.graphiql.enabled=true
spring.graphql.graphiql.path=/${spring.application.name}/graphiql
spring.graphql.path=/${spring.application.name}/graphql

#prometheus
management.endpoints.web.exposure.include=health,info,prometheus

